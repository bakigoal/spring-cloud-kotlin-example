version: "3"
services:

  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "licensing_dev"
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./docker/postgres/data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      backend:
        aliases:
          - "redis"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      backend:
        aliases:
          - "zookeeper"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      backend:
        aliases:
          - "kafka"

  keycloak_postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      backend:
        aliases:
          - "keycloakdb"

  keycloak:
    image: wizzn/keycloak:14
    restart: always
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloakdb
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - "8080:8080"
    depends_on:
      - keycloak_postgres
    networks:
      backend:
        aliases:
          - "keycloak"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      backend:
        aliases:
          - "zipkin"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/config.yml:/etc/prometheus/prometheus.yml
    container_name: prometheus
    networks:
      backend:
        aliases:
          - "prometheus"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      backend:
        aliases:
        - "grafana"

  # SPRING BOOT SERVICES  ----------------------------------------------
  config-server:
    build: ./config-server
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "configserver"

  eureka-server:
    build: ./eurekaserver
    ports:
      - "8070:8070"
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"

  gateway:
    build: ./gateway
    ports:
      - "8072:8072"
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway"

  licensing-service:
    build: ./licensing-service
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
      ENCRYPT_KEY: "verySecretKey"
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    ports:
      - "8180:8080"
      - "5005:5005"
    networks:
      backend:
        aliases:
          - "licensingservice"


  organization-service:
    build: ./organization-service
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
      ENCRYPT_KEY: "verySecretKey"
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    ports:
      - "8280:8080"
    networks:
      backend:
        aliases:
          - "organizationservice"

volumes:
  postgres_data:
    driver: local

networks:
  backend:
    driver: bridge